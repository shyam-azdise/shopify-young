{% form 'contact' %}

<div id="contact-form">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-12">
      <input type="text" placeholder="{{ section.settings.name_placeholder }}" class="{% if form.errors contains 'name' %}error{% endif %}" name="contact[name]" id="ContactFormName" value="{% if form.name %}{{ form.name }}{% elsif customer.name %}{{ customer.name }}{% endif %}">
    </div>
    <div class="col-lg-12 col-md-12 col-12">
      <input type="email" placeholder="{{ section.settings.email_placeholder }}" class="{% if form.errors contains 'email' %}error{% endif %}" name="contact[email]" id="ContactFormEmail" value="{% if form.email %}{{ form.email }}{% elsif customer.email %}{{ customer.email }}{% endif %}">
    </div>
    <div class="col-lg-12 col-md-12 col-12">
      <input type="text" id="ContactFormSubject" name="contact[subject]" placeholder="{{ section.settings.subject_placeholder }}" value="{{ form.subject }}">
    </div>

    <div class="col-lg-12 col-md-12 col-12">
      <textarea placeholder="{{ section.settings.message_placeholder }}" class="custom-textarea" name="contact[body]" id="ContactFormMessage">{% if form.body %}{{ form.body }}{% endif %}</textarea>
    </div>
    <div class="col-lg-12 col-md-12 col-12">
      <button  id="contactFormSubmit" class="submit" type="submit">{{ section.settings.form_button_name }}</button>
    </div>
  </div>
</div>

{% if form.posted_successfully? %}
<p class="form-messege note form-success">{{ 'contact.form.post_success' | t }}</p>
{% endif %}
{{ form.errors | default_errors }}

{% endform %}


<script>
  var actCallback = function (response) {
    $('#contactFormSubmit').prop("disabled", false);
    $('#re-captcha').remove();
  };
  var expCallback = function() {
    $('#contactFormSubmit').prop("disabled", true);
  };
 
  var onloadCallback = function () {
    var widget = grecaptcha.render(document.getElementById("re-captcha"), {
      'sitekey' : "123456789", // Sitekey, Retrieving from reCaptcha
      'theme': "light",
      'callback' : actCallback,
      'expired-callback': expCallback,
    });
  }
</script>